# AgentCortex Service Configuration
# Set AGENTCORTEX_ENABLED=true to use the actual AgentCortex services
# When enabled, all service URLs must be properly configured

# Enable/disable AgentCortex integration
AGENTCORTEX_ENABLED=false

# Core AgentCortex Service URLs
# These match the original lenovo_workflow.yml configuration
AGENTCORTEX_BASE_URL=http://10.110.130.250
AGENTCORTEX_PERSONALIZATION_BASE=http://10.110.131.30

# Individual service URLs (auto-configured from base URLs above, can be overridden)
AGENTCORTEX_INTENT_URL=http://10.110.130.250:22222
AGENTCORTEX_SESSION_MEMORY_URL=http://10.110.130.250:12306
AGENTCORTEX_PLANNING_URL=http://10.110.130.250:11111
AGENTCORTEX_SUMMARIZATION_URL=http://10.110.130.250:10087
AGENTCORTEX_EXECUTION_URL=http://10.110.130.250:15000
AGENTCORTEX_PERSONALIZATION_URL=http://10.110.131.30:8889
AGENTCORTEX_EXTRACT_MENTIONS_URL=http://10.110.131.30:8890

# AgentCortex settings
AGENTCORTEX_MAX_ITERATIONS=5
AGENTCORTEX_MOCK_MODE=false

# MCP Configuration (fallback when AgentCortex services are not available)
MCP_ENABLED=true
MCP_EXECUTOR_URL=http://localhost:15000

# Pipeline Configuration
PIPELINE_USE_PLAN_EXECUTE_AGENT=true

# Example Full AgentCortex Setup:
# To use the complete AgentCortex integration:
# 1. Set AGENTCORTEX_ENABLED=true
# 2. Ensure all AgentCortex services are running at the specified URLs
# 3. Set PIPELINE_USE_PLAN_EXECUTE_AGENT=true
# 4. Run: python run_pipeline.py

# Example MCP Fallback Setup:
# To use AgentCortex patterns with MCP fallback:
# 1. Set AGENTCORTEX_ENABLED=false
# 2. Set MCP_ENABLED=true
# 3. Set MCP_EXECUTOR_URL to your MCP service
# 4. Set PIPELINE_USE_PLAN_EXECUTE_AGENT=true
# 5. Run: python run_pipeline.py 